Theory
    Sort using an alternate order. decouple object ordering from default data 
    Must be a total order
    with strings there might be many different ways we want to Sort

public interface Comparator<Key> {
    int compare(Key v, Key w);
}

Java System Sort
    Create Comparator object and pass as second argument to sort()
        String[] a;
        Arrays.sort(a, String.CASE_INSENSITIVE_ORDER);  // create alternate order defined by Comparator<String> object

Creating Comparators 

    {   
        public static final Comparator<Student> BY_NAME = new ByName();
        public static final Comparator<Student> BY_SECTION = new BySection();
        
        private final String name;
        private final int section;

        private static class ByName implements Comparator<Student> {
            public int compare(Student v, Student w) {
                reutrn v.name.compareTo(w.name);
            }
        }

        private static class BySection implements Comparator<Student> {
            public int compare(Student v, Student w) {
                return v.section - w.section;
            }
        }
    }

Using Comparators

    public static void sort(Object[] a, Comparator comparator) {
        int N = a.length;
        for (int i = 0; i < N; i++) {
            for (int j = i; j > 0 && less(comparator, a[j], a[j - 1]); j--) {
                exch(a, j, j - 1);
            }
        }
    }

    private static boolean less(Comparator c, Object v, Object w) {
        return c.compare(v, w) < 0;
    }




